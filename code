{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "oututs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import scipy.stats\n",
    "import statsmodels.api as sm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [],
   "source": [
    "boston_url = 'https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-ST0151EN-SkillsNetwork/labs/boston_housing.csv'\n",
    "boston_df=pd.read_csv(boston_url)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>CRIM</th>\n",
       "      <th>ZN</th>\n",
       "      <th>INDUS</th>\n",
       "      <th>CHAS</th>\n",
       "      <th>NOX</th>\n",
       "      <th>RM</th>\n",
       "      <th>AGE</th>\n",
       "      <th>DIS</th>\n",
       "      <th>RAD</th>\n",
       "      <th>TAX</th>\n",
       "      <th>PTRATIO</th>\n",
       "      <th>LSTAT</th>\n",
       "      <th>MEDV</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>0.00632</td>\n",
       "      <td>18.0</td>\n",
       "      <td>2.31</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.538</td>\n",
       "      <td>6.575</td>\n",
       "      <td>65.2</td>\n",
       "      <td>4.0900</td>\n",
       "      <td>1.0</td>\n",
       "      <td>296.0</td>\n",
       "      <td>15.3</td>\n",
       "      <td>4.98</td>\n",
       "      <td>24.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>0.02731</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7.07</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.469</td>\n",
       "      <td>6.421</td>\n",
       "      <td>78.9</td>\n",
       "      <td>4.9671</td>\n",
       "      <td>2.0</td>\n",
       "      <td>242.0</td>\n",
       "      <td>17.8</td>\n",
       "      <td>9.14</td>\n",
       "      <td>21.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>0.02729</td>\n",
       "      <td>0.0</td>\n",
       "      <td>7.07</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.469</td>\n",
       "      <td>7.185</td>\n",
       "      <td>61.1</td>\n",
       "      <td>4.9671</td>\n",
       "      <td>2.0</td>\n",
       "      <td>242.0</td>\n",
       "      <td>17.8</td>\n",
       "      <td>4.03</td>\n",
       "      <td>34.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>0.03237</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.18</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.458</td>\n",
       "      <td>6.998</td>\n",
       "      <td>45.8</td>\n",
       "      <td>6.0622</td>\n",
       "      <td>3.0</td>\n",
       "      <td>222.0</td>\n",
       "      <td>18.7</td>\n",
       "      <td>2.94</td>\n",
       "      <td>33.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>0.06905</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.18</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.458</td>\n",
       "      <td>7.147</td>\n",
       "      <td>54.2</td>\n",
       "      <td>6.0622</td>\n",
       "      <td>3.0</td>\n",
       "      <td>222.0</td>\n",
       "      <td>18.7</td>\n",
       "      <td>5.33</td>\n",
       "      <td>36.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>501</th>\n",
       "      <td>501</td>\n",
       "      <td>0.06263</td>\n",
       "      <td>0.0</td>\n",
       "      <td>11.93</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.573</td>\n",
       "      <td>6.593</td>\n",
       "      <td>69.1</td>\n",
       "      <td>2.4786</td>\n",
       "      <td>1.0</td>\n",
       "      <td>273.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>9.67</td>\n",
       "      <td>22.4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>502</th>\n",
       "      <td>502</td>\n",
       "      <td>0.04527</td>\n",
       "      <td>0.0</td>\n",
       "      <td>11.93</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.573</td>\n",
       "      <td>6.120</td>\n",
       "      <td>76.7</td>\n",
       "      <td>2.2875</td>\n",
       "      <td>1.0</td>\n",
       "      <td>273.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>9.08</td>\n",
       "      <td>20.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>503</th>\n",
       "      <td>503</td>\n",
       "      <td>0.06076</td>\n",
       "      <td>0.0</td>\n",
       "      <td>11.93</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.573</td>\n",
       "      <td>6.976</td>\n",
       "      <td>91.0</td>\n",
       "      <td>2.1675</td>\n",
       "      <td>1.0</td>\n",
       "      <td>273.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>5.64</td>\n",
       "      <td>23.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>504</th>\n",
       "      <td>504</td>\n",
       "      <td>0.10959</td>\n",
       "      <td>0.0</td>\n",
       "      <td>11.93</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.573</td>\n",
       "      <td>6.794</td>\n",
       "      <td>89.3</td>\n",
       "      <td>2.3889</td>\n",
       "      <td>1.0</td>\n",
       "      <td>273.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>6.48</td>\n",
       "      <td>22.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>505</th>\n",
       "      <td>505</td>\n",
       "      <td>0.04741</td>\n",
       "      <td>0.0</td>\n",
       "      <td>11.93</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.573</td>\n",
       "      <td>6.030</td>\n",
       "      <td>80.8</td>\n",
       "      <td>2.5050</td>\n",
       "      <td>1.0</td>\n",
       "      <td>273.0</td>\n",
       "      <td>21.0</td>\n",
       "      <td>7.88</td>\n",
       "      <td>11.9</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>506 rows Ã— 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Unnamed: 0     CRIM    ZN  INDUS  CHAS    NOX     RM   AGE     DIS  RAD  \\\n",
       "0             0  0.00632  18.0   2.31   0.0  0.538  6.575  65.2  4.0900  1.0   \n",
       "1             1  0.02731   0.0   7.07   0.0  0.469  6.421  78.9  4.9671  2.0   \n",
       "2             2  0.02729   0.0   7.07   0.0  0.469  7.185  61.1  4.9671  2.0   \n",
       "3             3  0.03237   0.0   2.18   0.0  0.458  6.998  45.8  6.0622  3.0   \n",
       "4             4  0.06905   0.0   2.18   0.0  0.458  7.147  54.2  6.0622  3.0   \n",
       "..          ...      ...   ...    ...   ...    ...    ...   ...     ...  ...   \n",
       "501         501  0.06263   0.0  11.93   0.0  0.573  6.593  69.1  2.4786  1.0   \n",
       "502         502  0.04527   0.0  11.93   0.0  0.573  6.120  76.7  2.2875  1.0   \n",
       "503         503  0.06076   0.0  11.93   0.0  0.573  6.976  91.0  2.1675  1.0   \n",
       "504         504  0.10959   0.0  11.93   0.0  0.573  6.794  89.3  2.3889  1.0   \n",
       "505         505  0.04741   0.0  11.93   0.0  0.573  6.030  80.8  2.5050  1.0   \n",
       "\n",
       "       TAX  PTRATIO  LSTAT  MEDV  \n",
       "0    296.0     15.3   4.98  24.0  \n",
       "1    242.0     17.8   9.14  21.6  \n",
       "2    242.0     17.8   4.03  34.7  \n",
       "3    222.0     18.7   2.94  33.4  \n",
       "4    222.0     18.7   5.33  36.2  \n",
       "..     ...      ...    ...   ...  \n",
       "501  273.0     21.0   9.67  22.4  \n",
       "502  273.0     21.0   9.08  20.6  \n",
       "503  273.0     21.0   5.64  23.9  \n",
       "504  273.0     21.0   6.48  22.0  \n",
       "505  273.0     21.0   7.88  11.9  \n",
       "\n",
       "[506 rows x 14 columns]"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "boston_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>CRIM</th>\n",
       "      <th>ZN</th>\n",
       "      <th>INDUS</th>\n",
       "      <th>CHAS</th>\n",
       "      <th>NOX</th>\n",
       "      <th>RM</th>\n",
       "      <th>AGE</th>\n",
       "      <th>DIS</th>\n",
       "      <th>RAD</th>\n",
       "      <th>TAX</th>\n",
       "      <th>PTRATIO</th>\n",
       "      <th>LSTAT</th>\n",
       "      <th>MEDV</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>506.000000</td>\n",
       "      <td>506.000000</td>\n",
       "      <td>506.000000</td>\n",
       "      <td>506.000000</td>\n",
       "      <td>506.000000</td>\n",
       "      <td>506.000000</td>\n",
       "      <td>506.000000</td>\n",
       "      <td>506.000000</td>\n",
       "      <td>506.000000</td>\n",
       "      <td>506.000000</td>\n",
       "      <td>506.000000</td>\n",
       "      <td>506.000000</td>\n",
       "      <td>506.000000</td>\n",
       "      <td>506.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>252.500000</td>\n",
       "      <td>3.613524</td>\n",
       "      <td>11.363636</td>\n",
       "      <td>11.136779</td>\n",
       "      <td>0.069170</td>\n",
       "      <td>0.554695</td>\n",
       "      <td>6.284634</td>\n",
       "      <td>68.574901</td>\n",
       "      <td>3.795043</td>\n",
       "      <td>9.549407</td>\n",
       "      <td>408.237154</td>\n",
       "      <td>18.455534</td>\n",
       "      <td>12.653063</td>\n",
       "      <td>22.532806</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>146.213884</td>\n",
       "      <td>8.601545</td>\n",
       "      <td>23.322453</td>\n",
       "      <td>6.860353</td>\n",
       "      <td>0.253994</td>\n",
       "      <td>0.115878</td>\n",
       "      <td>0.702617</td>\n",
       "      <td>28.148861</td>\n",
       "      <td>2.105710</td>\n",
       "      <td>8.707259</td>\n",
       "      <td>168.537116</td>\n",
       "      <td>2.164946</td>\n",
       "      <td>7.141062</td>\n",
       "      <td>9.197104</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.006320</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.460000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.385000</td>\n",
       "      <td>3.561000</td>\n",
       "      <td>2.900000</td>\n",
       "      <td>1.129600</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>187.000000</td>\n",
       "      <td>12.600000</td>\n",
       "      <td>1.730000</td>\n",
       "      <td>5.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>126.250000</td>\n",
       "      <td>0.082045</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>5.190000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.449000</td>\n",
       "      <td>5.885500</td>\n",
       "      <td>45.025000</td>\n",
       "      <td>2.100175</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>279.000000</td>\n",
       "      <td>17.400000</td>\n",
       "      <td>6.950000</td>\n",
       "      <td>17.025000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>252.500000</td>\n",
       "      <td>0.256510</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>9.690000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.538000</td>\n",
       "      <td>6.208500</td>\n",
       "      <td>77.500000</td>\n",
       "      <td>3.207450</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>330.000000</td>\n",
       "      <td>19.050000</td>\n",
       "      <td>11.360000</td>\n",
       "      <td>21.200000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>378.750000</td>\n",
       "      <td>3.677083</td>\n",
       "      <td>12.500000</td>\n",
       "      <td>18.100000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.624000</td>\n",
       "      <td>6.623500</td>\n",
       "      <td>94.075000</td>\n",
       "      <td>5.188425</td>\n",
       "      <td>24.000000</td>\n",
       "      <td>666.000000</td>\n",
       "      <td>20.200000</td>\n",
       "      <td>16.955000</td>\n",
       "      <td>25.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>505.000000</td>\n",
       "      <td>88.976200</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>27.740000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.871000</td>\n",
       "      <td>8.780000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>12.126500</td>\n",
       "      <td>24.000000</td>\n",
       "      <td>711.000000</td>\n",
       "      <td>22.000000</td>\n",
       "      <td>37.970000</td>\n",
       "      <td>50.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Unnamed: 0        CRIM          ZN       INDUS        CHAS         NOX  \\\n",
       "count  506.000000  506.000000  506.000000  506.000000  506.000000  506.000000   \n",
       "mean   252.500000    3.613524   11.363636   11.136779    0.069170    0.554695   \n",
       "std    146.213884    8.601545   23.322453    6.860353    0.253994    0.115878   \n",
       "min      0.000000    0.006320    0.000000    0.460000    0.000000    0.385000   \n",
       "25%    126.250000    0.082045    0.000000    5.190000    0.000000    0.449000   \n",
       "50%    252.500000    0.256510    0.000000    9.690000    0.000000    0.538000   \n",
       "75%    378.750000    3.677083   12.500000   18.100000    0.000000    0.624000   \n",
       "max    505.000000   88.976200  100.000000   27.740000    1.000000    0.871000   \n",
       "\n",
       "               RM         AGE         DIS         RAD         TAX     PTRATIO  \\\n",
       "count  506.000000  506.000000  506.000000  506.000000  506.000000  506.000000   \n",
       "mean     6.284634   68.574901    3.795043    9.549407  408.237154   18.455534   \n",
       "std      0.702617   28.148861    2.105710    8.707259  168.537116    2.164946   \n",
       "min      3.561000    2.900000    1.129600    1.000000  187.000000   12.600000   \n",
       "25%      5.885500   45.025000    2.100175    4.000000  279.000000   17.400000   \n",
       "50%      6.208500   77.500000    3.207450    5.000000  330.000000   19.050000   \n",
       "75%      6.623500   94.075000    5.188425   24.000000  666.000000   20.200000   \n",
       "max      8.780000  100.000000   12.126500   24.000000  711.000000   22.000000   \n",
       "\n",
       "            LSTAT        MEDV  \n",
       "count  506.000000  506.000000  \n",
       "mean    12.653063   22.532806  \n",
       "std      7.141062    9.197104  \n",
       "min      1.730000    5.000000  \n",
       "25%      6.950000   17.025000  \n",
       "50%     11.360000   21.200000  \n",
       "75%     16.955000   25.000000  \n",
       "max     37.970000   50.000000  "
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "boston_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "bp=sns.boxplot(y=\"MEDV\",data=boston_df).set(title='Boxplot of Median value of owner-occupied homes')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[Text(0.5, 1.0, 'Barchart of Charles river variable')]"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "sns.countplot(x=\"CHAS\",data=boston_df).set(title='Barchart of Charles river variable')\n",
    " "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "100.0"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "max(boston_df.AGE)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[Text(0.5, 1.0, 'Boxplot of Median value of owner-occupid homes by Age Group')]"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "bins=[1,35,69,100]\n",
    "labels=['<=35 years','36-70 years','>70 years']\n",
    "boston_df[\"agegroup\"]=pd.cut(boston_df.AGE,bins,labels=labels,include_lowest=True)\n",
    "sns.boxplot(x=\"agegroup\",y=\"MEDV\",data=boston_df).set(title='Boxplot of Median value of owner-occupid homes by Age Group')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'Nitric oxide concentration')"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(x=boston_df.NOX,y=boston_df.INDUS)\n",
    "plt.title(\"Scatter plot Nitic oxide concentration vs the propotion  of non-retail business acres per town\")\n",
    "plt.xlabel(\"Nitric oxide concentration\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Histogram for the pupil to teacher ratio ')"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig=plt.hist(x=boston_df.PTRATIO, bins='auto')\n",
    "plt.title(\"Histogram for the pupil to teacher ratio \")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# T- test for indpendent samples"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Ttest_indResult(statistic=3.996437466090509, pvalue=7.390623170519905e-05)"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    " scipy.stats.ttest_ind(boston_df[boston_df['CHAS'] == 1]['MEDV'],\n",
    "                   boston_df[boston_df['CHAS'] == 0]['MEDV'], equal_var = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# pvalue=7.390623170519905e-05 which is less than 0.05 so I reject  null hypothesis.These is a significant diffrence in median value of houses bounded by Charles river."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# ANOVA test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [],
   "source": [
    "thirtyfive_lower=boston_df.loc[(boston_df['AGE']<=35)]\n",
    "thirtysix_seventy=boston_df.loc[(boston_df['AGE']>35)&(boston_df['AGE']<=70)]\n",
    "seventy_older=boston_df.loc[(boston_df['AGE']>70)]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LeveneResult(statistic=2.780620029374844, pvalue=0.06295337343259205)"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scipy.stats.levene(thirtyfive_lower['MEDV'],\n",
    "                   thirtysix_seventy['MEDV'], \n",
    "                   seventy_older['MEDV'], \n",
    "                   center='mean')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# pvalue=0.06295337343259205 which is more than 0.05 so I can not reject  null hypothesis.These is a significant diffrence in median value of houses for each propotion of owner occupid built prior to 1940"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(0.763651446920915, 7.913361061239593e-98)"
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "scipy.stats.pearsonr(boston_df['NOX'], boston_df['INDUS'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# pvalue=7.913361061239593e-98 which is less than 0.05 so I  reject null hypothesis.There is arelationship between Niric oxide concentration and proportion of non business  accres per town"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Regression Analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"simpletable\">\n",
       "<caption>OLS Regression Results</caption>\n",
       "<tr>\n",
       "  <th>Dep. Variable:</th>          <td>MEDV</td>       <th>  R-squared:         </th> <td>   0.062</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Model:</th>                   <td>OLS</td>       <th>  Adj. R-squared:    </th> <td>   0.061</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Method:</th>             <td>Least Squares</td>  <th>  F-statistic:       </th> <td>   33.58</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Date:</th>             <td>Sun, 30 Oct 2022</td> <th>  Prob (F-statistic):</th> <td>1.21e-08</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Time:</th>                 <td>18:03:54</td>     <th>  Log-Likelihood:    </th> <td> -1823.9</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>No. Observations:</th>      <td>   506</td>      <th>  AIC:               </th> <td>   3652.</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Residuals:</th>          <td>   504</td>      <th>  BIC:               </th> <td>   3660.</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Df Model:</th>              <td>     1</td>      <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Covariance Type:</th>      <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "    <td></td>       <th>coef</th>     <th>std err</th>      <th>t</th>      <th>P>|t|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
       "</tr>\n",
       "<tr>\n",
       "  <th>const</th> <td>   18.3901</td> <td>    0.817</td> <td>   22.499</td> <td> 0.000</td> <td>   16.784</td> <td>   19.996</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>DIS</th>   <td>    1.0916</td> <td>    0.188</td> <td>    5.795</td> <td> 0.000</td> <td>    0.722</td> <td>    1.462</td>\n",
       "</tr>\n",
       "</table>\n",
       "<table class=\"simpletable\">\n",
       "<tr>\n",
       "  <th>Omnibus:</th>       <td>139.779</td> <th>  Durbin-Watson:     </th> <td>   0.570</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Prob(Omnibus):</th> <td> 0.000</td>  <th>  Jarque-Bera (JB):  </th> <td> 305.104</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Skew:</th>          <td> 1.466</td>  <th>  Prob(JB):          </th> <td>5.59e-67</td>\n",
       "</tr>\n",
       "<tr>\n",
       "  <th>Kurtosis:</th>      <td> 5.424</td>  <th>  Cond. No.          </th> <td>    9.32</td>\n",
       "</tr>\n",
       "</table><br/><br/>Notes:<br/>[1] Standard Errors assume that the covariance matrix of the errors is correctly specified."
      ],
      "text/plain": [
       "<class 'statsmodels.iolib.summary.Summary'>\n",
       "\"\"\"\n",
       "                            OLS Regression Results                            \n",
       "==============================================================================\n",
       "Dep. Variable:                   MEDV   R-squared:                       0.062\n",
       "Model:                            OLS   Adj. R-squared:                  0.061\n",
       "Method:                 Least Squares   F-statistic:                     33.58\n",
       "Date:                Sun, 30 Oct 2022   Prob (F-statistic):           1.21e-08\n",
       "Time:                        18:03:54   Log-Likelihood:                -1823.9\n",
       "No. Observations:                 506   AIC:                             3652.\n",
       "Df Residuals:                     504   BIC:                             3660.\n",
       "Df Model:                           1                                         \n",
       "Covariance Type:            nonrobust                                         \n",
       "==============================================================================\n",
       "                 coef    std err          t      P>|t|      [0.025      0.975]\n",
       "------------------------------------------------------------------------------\n",
       "const         18.3901      0.817     22.499      0.000      16.784      19.996\n",
       "DIS            1.0916      0.188      5.795      0.000       0.722       1.462\n",
       "==============================================================================\n",
       "Omnibus:                      139.779   Durbin-Watson:                   0.570\n",
       "Prob(Omnibus):                  0.000   Jarque-Bera (JB):              305.104\n",
       "Skew:                           1.466   Prob(JB):                     5.59e-67\n",
       "Kurtosis:                       5.424   Cond. No.                         9.32\n",
       "==============================================================================\n",
       "\n",
       "Notes:\n",
       "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
       "\"\"\""
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Y = boston_df['MEDV']\n",
    "X = boston_df['DIS']\n",
    "X=sm.add_constant(X)\n",
    "model = sm.OLS(Y, X).fit()\n",
    "predictions = model.predict(X)\n",
    "model.summary()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# The p-vale is less than 0.05 so I reject null hypothesis .There is an impac of an additional weighted distace to the five Boston employment."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
